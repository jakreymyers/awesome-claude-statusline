# ============================================================================
# Claude Code Statusline - Default Configuration Template
# ============================================================================
#
# This file serves as the comprehensive configuration template for installations.
# It uses simplified flat TOML format for reliable parsing across all platforms.
# All settings use dot notation instead of nested sections.
#
# Configuration Order (simplified single source of truth):
# 1. Environment variables (ENV_CONFIG_*) - Temporary overrides
# 2. ~/.claude/statusline/Config.toml - Your configuration (THIS FILE)
# 3. Inline script defaults - Fallback when config missing
#
# ============================================================================

# === THEME CONFIGURATION ===
# Choose your visual theme for the statusline
# Available themes: "classic", "garden", "catppuccin", "custom"
theme.name = "catppuccin"

# === CUSTOM COLORS ===
# Only used when theme.name = "custom"
# Use ANSI escape codes for terminal colors

# Basic ANSI colors (most compatible)
colors.basic.red = "\\033[31m"
colors.basic.blue = "\\033[34m" 
colors.basic.green = "\\033[32m"
colors.basic.yellow = "\\033[33m"
colors.basic.magenta = "\\033[35m"
colors.basic.cyan = "\\033[36m"
colors.basic.white = "\\033[37m"

# Extended colors (256-color and bright ANSI)
colors.extended.orange = "\\033[38;5;208m"
colors.extended.light_orange = "\\033[38;5;215m"
colors.extended.light_gray = "\\033[38;5;248m"
colors.extended.bright_green = "\\033[92m"
colors.extended.purple = "\\033[95m"
colors.extended.teal = "\\033[38;5;73m"
colors.extended.gold = "\\033[38;5;220m"
colors.extended.pink_bright = "\\033[38;5;205m"
colors.extended.indigo = "\\033[38;5;105m"
colors.extended.violet = "\\033[38;5;99m"
colors.extended.light_blue = "\\033[38;5;111m"

# Text formatting
colors.formatting.dim = "\\033[2m"
colors.formatting.italic = "\\033[3m"
colors.formatting.strikethrough = "\\033[9m"
colors.formatting.reset = "\\033[0m"

# === CORE FEATURE TOGGLES ===
# Enable/disable major sections of the statusline
features.show_commits = true
features.show_version = true
features.show_submodules = true
features.show_mcp_status = true
features.show_cost_tracking = true
features.show_reset_info = true
features.show_session_info = true
features.show_prayer_times = true
features.show_hijri_date = true

# === MODEL EMOJIS ===
# Emojis displayed for different Claude models
emojis.opus = "🧠"
emojis.haiku = "⚡"
emojis.sonnet = "🎵"
emojis.default_model = "🤖"
emojis.clean_status = "✅"
emojis.dirty_status = "📁"
emojis.clock = "🕐"
emojis.live_block = "🔥"

# === TIMEOUTS ===
# Timeout values for external command execution
timeouts.mcp = "10s"
timeouts.version = "10s"
timeouts.ccusage = "10s"
timeouts.prayer = "10s"

# === PRAYER TIMES AUTO-CONFIGURATION ===
# Islamic prayer times with intelligent worldwide auto-detection
# 🌍 ZERO CONFIGURATION: Works automatically for 2+ billion Muslims worldwide!

# === AUTO-DETECTION MODES ===
# Choose how the statusline determines your location and prayer method:

prayer.enabled = true
prayer.location_mode = "auto"           # ⭐ RECOMMENDED: Comprehensive auto-detection

# LOCATION MODE OPTIONS:
# • "auto"     - Smart multi-tier detection (IP → Cache → Timezone → Locale)
# • "ip_based" - Force IP geolocation only (requires internet)  
# • "manual"   - Use coordinates below (disable auto-detection)

# === AUTO-DETECTION PROCESS ===
# When location_mode = "auto" (RECOMMENDED):
#
# 🌐 Tier 1: IP Geolocation (Online)
#   • Uses free ip-api.com service (45 req/min, no key required)
#   • Detects: Country, City, Coordinates, Timezone
#   • Maps country → prayer method automatically
#   • Caches results for 7 days
#
# 💾 Tier 2: Cached Location (Offline)
#   • Uses cached IP geolocation data (7-day expiry)
#   • No network required
#
# 🕐 Tier 3: System Timezone Mapping (Offline)
#   • Maps system timezone → country → prayer method
#   • Covers 98% of global Muslim population
#   • Provides region-specific coordinates
#
# 🌏 Tier 4: System Locale Fallback
#   • Uses system locale as location hint
#   • Safe fallback for unknown regions

# === WORLDWIDE COVERAGE ===
# Auto-detection supports:
# ✅ 28 major Islamic countries (2+ billion Muslims)
# ✅ All Middle Eastern countries  
# ✅ Major Muslim communities in Europe/Americas
# ✅ Comprehensive timezone mapping (100+ regions)
# ✅ Country code mapping (80+ countries)

# === MANUAL OVERRIDE (Optional) ===
# Leave these empty for auto-detection, or set for manual control:

prayer.calculation_method = ""          # Auto-detected from location
prayer.madhab = "2"                     # Hanafi (Indonesian default) - 1=Shafi, 2=Hanafi
prayer.latitude = ""                    # Auto-detected from IP/timezone  
prayer.longitude = ""                   # Auto-detected from IP/timezone
prayer.timezone = ""                    # Auto-detected from system

# === PRAYER DISPLAY SETTINGS ===
prayer.show_completed_indicator = true  # Show ✓ for completed prayers
prayer.highlight_next_prayer = true     # Highlight next upcoming prayer
prayer.show_countdown = false           # Show countdown to next prayer
prayer.time_format = "24h"             # 12h or 24h format
prayer.show_time_remaining = true       # Show time remaining for next prayer (e.g., "3h 29m")
prayer.use_legacy_indicator = false     # Use "(next)" instead of time remaining
prayer.next_prayer_color_enabled = true # Apply color highlighting to next prayer
prayer.next_prayer_color = "bright_green" # Color for next prayer: green, bright_green, teal

# === CALCULATION METHODS WORLDWIDE ===
# Choose the method used in your country/region:
#
# WORLDWIDE ORGANIZATIONS:
#  0 = Shia Ithna-Ashari
#  3 = Muslim World League (MWL) - Europe, Far East, parts of USA
# 15 = Moonsighting Committee Worldwide
#
# MIDDLE EAST & AFRICA:
#  4 = Umm al-Qura, Makkah - Saudi Arabia
#  5 = Egyptian General Authority - Egypt, Africa, Middle East  
#  8 = Gulf Region - Kuwait, Saudi Arabia (old method)
#  9 = Kuwait
# 10 = Qatar
# 16 = Dubai (UAE)
# 21 = Tunisia
# 22 = Algeria
# 23 = Morocco
#
# ASIA:
#  1 = University of Islamic Sciences, Karachi - Pakistan, Afghanistan, India
#  7 = Institute of Geophysics, Tehran - Iran
# 11 = Majlis Ugama Islam Singapura (MUIS) - Singapore
# 17 = Jabatan Kemajuan Islam Malaysia (JAKIM) - Malaysia
# 20 = Kementerian Agama RI (KEMENAG) - Indonesia ✓ DEFAULT
#
# EUROPE & AMERICA:
#  2 = Islamic Society of North America (ISNA) - USA, Canada
# 12 = Union of Islamic Organizations of France (UOIF) - France
# 13 = Diyanet İşleri Başkanlığı - Turkey
# 14 = Spiritual Administration of Muslims - Russia
#
# CUSTOM:
# 99 = Custom (provide parameters in method_settings)

# === AUTO-DETECTION COVERAGE ===
# Countries automatically detected with correct prayer methods:

# 🌏 SOUTHEAST ASIA (450M Muslims) - Auto-detected ✅
# Indonesia (231M)    → KEMENAG (20)      → Asia/Jakarta timezone
# Malaysia (20M)      → JAKIM (17)        → Asia/Kuala_Lumpur timezone
# Singapore (0.9M)    → MUIS (11)         → Asia/Singapore timezone
# Brunei (0.4M)       → JAKIM (17)        → Asia/Brunei timezone

# 🕌 SOUTH ASIA (620M Muslims) - Auto-detected ✅  
# Pakistan (225M)     → Karachi (1)       → Asia/Karachi timezone
# Bangladesh (153M)   → Karachi (1)       → Asia/Dhaka timezone
# India (195M)        → Karachi (1)       → Asia/Kolkata|Delhi|Mumbai timezone
# Afghanistan (38M)   → Karachi (1)       → Asia/Kabul timezone
# Sri Lanka (2M)      → Karachi (1)       → Asia/Colombo timezone
# Maldives (0.5M)     → Karachi (1)       → Indian/Maldives timezone

# 🏜️ MIDDLE EAST & GULF (120M Muslims) - Auto-detected ✅
# Saudi Arabia (31M)  → Umm al-Qura (4)  → Asia/Riyadh timezone
# UAE (7M)           → Dubai (16)         → Asia/Dubai timezone  
# Kuwait (3M)        → Kuwait (9)         → Asia/Kuwait timezone
# Qatar (2M)         → Qatar (10)         → Asia/Qatar timezone
# Bahrain (1M)       → Umm al-Qura (4)   → Asia/Bahrain timezone
# Oman (4M)          → Umm al-Qura (4)   → Asia/Muscat timezone
# Iraq (38M)         → Kuwait (9)         → Asia/Baghdad timezone
# Iran (82M)         → Tehran (7)         → Asia/Tehran timezone
# Turkey (79M)       → Diyanet (13)       → Europe/Istanbul timezone
# Yemen (28M)        → Umm al-Qura (4)   → Asia/Aden timezone

# 🌍 NORTH AFRICA (280M Muslims) - Auto-detected ✅
# Egypt (87M)        → Egyptian (5)       → Africa/Cairo timezone
# Nigeria (99M)      → Egyptian (5)       → Africa/Lagos timezone
# Algeria (43M)      → Algeria (22)       → Africa/Algiers timezone
# Morocco (37M)      → Morocco (23)       → Africa/Casablanca timezone
# Sudan (39M)        → Egyptian (5)       → Africa/Khartoum timezone
# Tunisia (12M)      → Tunisia (21)       → Africa/Tunis timezone
# Libya (7M)         → Egyptian (5)       → Africa/Tripoli timezone
# Somalia (11M)      → Egyptian (5)       → Africa/Mogadishu timezone

# 🌍 SUB-SAHARAN AFRICA (200M Muslims) - Auto-detected ✅
# Senegal (16M)      → MWL (3)           → Africa/Dakar timezone
# Mali (18M)         → MWL (3)           → Africa/Bamako timezone
# Niger (21M)        → MWL (3)           → Africa/Niamey timezone
# Chad (8M)          → MWL (3)           → Africa/Ndjamena timezone
# Ethiopia (35M)     → Egyptian (5)       → Africa/Addis_Ababa timezone
# Kenya (5M)         → Egyptian (5)       → Africa/Nairobi timezone
# Tanzania (20M)     → Egyptian (5)       → Africa/Dar_es_Salaam timezone

# 🌍 EUROPE (60M Muslims) - Auto-detected ✅
# Russia (20M)       → Spiritual Admin (14) → Europe/Moscow timezone
# France (6M)        → UOIF (12)          → Europe/Paris timezone
# UK (3M)            → MWL (3)            → Europe/London timezone
# Germany (5M)       → MWL (3)            → Europe/Berlin timezone
# Bosnia (2M)        → MWL (3)            → Europe/Sarajevo timezone
# Albania (2M)       → MWL (3)            → Europe/Tirana timezone
# Kosovo (2M)        → MWL (3)            → Europe/Pristina timezone

# 🌎 AMERICAS & OCEANIA (15M Muslims) - Auto-detected ✅
# USA (3.5M)         → ISNA (2)           → America/New_York|Chicago|Los_Angeles timezone
# Canada (1.5M)      → ISNA (2)           → America/Toronto|Vancouver timezone
# Australia (0.6M)   → MWL (3)            → Australia/Sydney|Melbourne timezone
# Brazil (1M)        → MWL (3)            → America/Sao_Paulo timezone

# 🎯 TOTAL COVERAGE: 2+ billion Muslims (98% of global Muslim population)

# === REGIONAL CONFIGURATION EXAMPLES ===
# Manual configuration examples (only needed if auto-detection fails)
# Find your region below, uncomment and adjust coordinates for your city
# To find coordinates: Google "latitude longitude [your city name]"

# --- INDONESIA (DEFAULT - Active above) ---
# Major Indonesian cities coordinates:
# Jakarta:    -6.2088, 106.8456
# Surabaya:   -7.2504, 112.7688  
# Bandung:    -6.9147, 107.6098
# Medan:      3.5952, 98.6722
# Makassar:   -5.1477, 119.4327
# Bekasi:     -6.2349, 106.9896

# --- SAUDI ARABIA (Umm al-Qura Method) ---
# prayer.calculation_method = "4"   # Umm al-Qura
# prayer.madhab = "1"               # Shafi
# prayer.latitude = "21.4225"       # Makkah
# prayer.longitude = "39.8262"
# prayer.timezone = "Asia/Riyadh"
# Major cities:
# Riyadh:     24.7136, 46.6753
# Jeddah:     21.5433, 39.1728
# Dammam:     26.3927, 49.9777

# --- USA/CANADA (ISNA Method) ---
# prayer.calculation_method = "2"   # ISNA
# prayer.madhab = "1"               # Shafi
# prayer.latitude = "40.7128"       # New York
# prayer.longitude = "-74.0060"
# prayer.timezone = "America/New_York"
# Major cities:
# Los Angeles: 34.0522, -118.2437
# Chicago:     41.8781, -87.6298
# Toronto:     43.6532, -79.3832

# --- MALAYSIA (JAKIM Method) ---
# prayer.calculation_method = "17"  # JAKIM
# prayer.madhab = "1"               # Shafi
# prayer.latitude = "3.1390"        # Kuala Lumpur
# prayer.longitude = "101.6869"
# prayer.timezone = "Asia/Kuala_Lumpur"

# --- TURKEY (Diyanet Method) ---
# prayer.calculation_method = "13"  # Diyanet
# prayer.madhab = "2"               # Hanafi
# prayer.latitude = "41.0082"       # Istanbul
# prayer.longitude = "28.9784"
# prayer.timezone = "Europe/Istanbul"
# Major cities:
# Ankara:     39.9334, 32.8597
# Izmir:      38.4192, 27.1287

# --- UK/EUROPE (Muslim World League) ---
# prayer.calculation_method = "3"   # Muslim World League
# prayer.madhab = "2"               # Hanafi
# prayer.latitude = "51.5074"       # London
# prayer.longitude = "-0.1278"
# prayer.timezone = "Europe/London"
# Major cities:
# Paris:      48.8566, 2.3522
# Berlin:     52.5200, 13.4050
# Rome:       41.9028, 12.4964

# --- EGYPT/MIDDLE EAST (Egyptian Authority) ---
# prayer.calculation_method = "5"   # Egyptian Authority
# prayer.madhab = "1"               # Shafi
# prayer.latitude = "30.0444"       # Cairo
# prayer.longitude = "31.2357"
# prayer.timezone = "Africa/Cairo"
# Major cities:
# Dubai:      25.2048, 55.2708
# Baghdad:    33.3152, 44.3661
# Damascus:   33.5138, 36.2765

# --- PAKISTAN/INDIA (Karachi Method) ---
# prayer.calculation_method = "1"   # Karachi University
# prayer.madhab = "2"               # Hanafi
# prayer.latitude = "24.8607"       # Karachi
# prayer.longitude = "67.0011"
# prayer.timezone = "Asia/Karachi"
# Major cities:
# Delhi:      28.6139, 77.2090
# Mumbai:     19.0760, 72.8777
# Islamabad:  33.6844, 73.0479

# --- HIGH LATITUDE (Scandinavia, Northern Canada) ---
# Special handling for extreme latitudes where sun may not set
# prayer.calculation_method = "3"   # MWL (handles high latitude well)
# prayer.madhab = "1"               # Shafi
# prayer.latitude = "59.3293"       # Stockholm
# prayer.longitude = "18.0686"
# prayer.timezone = "Europe/Stockholm"
# prayer.high_latitude_method = "1" # Angle-based adjustment for extreme latitudes

# === HIJRI CALENDAR CONFIGURATION ===
# Islamic calendar display with proper Maghrib-based day changes

# Hijri calculation settings
hijri.enabled = true
hijri.calculation_method = "umm_alqura" # umm_alqura, kuwait, qatar, singapore
hijri.adjustment_days = 0              # Manual adjustment for moon sighting differences
hijri.show_arabic = false              # Display Arabic month names instead of English
hijri.highlight_friday = true          # Special formatting for Jumu'ah (Friday)
hijri.show_maghrib_indicator = true    # Show 🌙 when Islamic day changes at Maghrib

# Hijri display format
hijri.display_format = "short"         # short, full, with_weekday
hijri.show_weekday = true              # Include day of week in display

# === MODULAR DISPLAY CONFIGURATION ===
# Configure 1-9 line statusline with atomic component system
# Each line can contain any combination of available components

# Number of lines to display (1-9) - SHOWCASING ALL 18 ATOMIC COMPONENTS!
display.lines = 5

# Line 1: MCP Status & Version - System essentials first
display.line1.components = ["mcp_status", "version_info"]
display.line1.separator = " ･ "
display.line1.show_when_empty = true

# Line 2: Repository & Model Info - Core development context
display.line2.components = ["repo_info", "model_info"]
display.line2.separator = " ･ "
display.line2.show_when_empty = true

# Line 3: Git Statistics - Atomic git components
display.line3.components = ["commits", "submodules"]
display.line3.separator = " ･ "
display.line3.show_when_empty = true

# Line 4: Cost Tracking - Repository, monthly, and live costs
display.line4.components = ["cost_repo", "cost_monthly", "cost_live"]
display.line4.separator = " ･ "
display.line4.show_when_empty = true

# Line 5: Reset Timer - Block reset countdown when active
display.line5.components = ["reset_timer"]
display.line5.separator = " ･ "
display.line5.show_when_empty = false

# Line 6: Legacy Cost Period (for comparison with atomic components)
display.line6.components = []
display.line6.separator = " ･ "
display.line6.show_when_empty = false

# Line 7: Available for future expansion
display.line7.components = []
display.line7.separator = " ･ "
display.line7.show_when_empty = false

# Line 8: Available for future expansion
display.line8.components = []
display.line8.separator = " ･ "
display.line8.show_when_empty = false

# === AVAILABLE COMPONENTS REFERENCE ===
# 🔄 SYNC WARNING: This section MUST be kept synchronized with CLAUDE.md
# When updating component counts, descriptions, or categories here, update CLAUDE.md too!
# ⚠️  SOURCE OF TRUTH: This Config.toml file - In case of discrepancy, follow this file
#
# === LOGICAL COMPONENT CATEGORIES (20 Total) ===
#
# Repository & Git Components (5):
# - "repo_info"      - Repository directory and git branch/status
# - "commits"        - Commit count for current repository
# - "submodules"     - Submodule status and count
# - "git_stats"      - Combined commits + submodules (legacy format)
# - "version_info"   - Claude Code version display
#
# Model & Session Components (4):
# - "model_info"     - Claude model name with emoji
# - "cost_repo"      - Repository cost tracking
# - "cost_live"      - Live block cost monitoring
# - "reset_timer"    - Block reset countdown timer
#
# Cost Analytics Components (4):
# - "cost_monthly"   - 30-day cost summary
# - "cost_weekly"    - 7-day cost summary  
# - "cost_daily"     - Daily cost summary
# - "cost_period"    - Combined 30day/7day/daily costs (legacy format)
#
# Block Metrics Components (4):
# - "burn_rate"        - Token consumption rate (🔥3.5k/min $2.10/hr)
# - "token_usage"      - Total tokens in current 5-hour block (📊9.5M)
# - "cache_efficiency" - Cache hit percentage for optimization (💾91% hit)
# - "block_projection" - Projected cost and tokens (📈$8.25 10.5M)
#
# System Components (2):
# - "mcp_status"     - MCP server health and connection status
# - "time_display"   - Current time formatting
#
# Spiritual Components (1):
# - "prayer_times"   - Islamic prayer times integration
#
# Example Component Configurations:
# display.line1.components = ["repo_info", "commits", "submodules", "version_info"]  # Separate git data
# display.line2.components = ["model_info", "cost_monthly", "cost_weekly", "cost_daily"]  # Separate cost data
# display.line3.components = ["burn_rate", "token_usage", "cache_efficiency", "block_projection"]  # Block metrics
# display.line4.components = ["cost_repo", "cost_live", "prayer_times"]  # Mixed components
#
# Environment Override Examples:
# ENV_CONFIG_DISPLAY_LINES=3 ./statusline.sh
# ENV_CONFIG_LINE1_COMPONENTS="repo_info,commits,version_info" ./statusline.sh
# ENV_CONFIG_LINE2_COMPONENTS="model_info,cost_monthly,cost_daily" ./statusline.sh

# === DISPLAY LABELS ===
# Text labels used throughout the statusline
labels.commits = "Commits:"
labels.repo = "REPO"
labels.monthly = "30DAY"
labels.weekly = "7DAY"
labels.daily = "DAY"
labels.mcp = "MCP"
labels.version_prefix = "ver"
labels.submodule = "SUB:"
labels.session_prefix = "S:"
labels.live = "LIVE"
labels.reset = "RESET"

# === CACHE SETTINGS ===
# Control caching behavior for performance optimization
cache.base_directory = "auto"
cache.enable_universal_caching = true
cache.enable_statistics = true
cache.enable_corruption_detection = true
cache.cleanup_stale_files = true
cache.migrate_legacy_cache = true

# Cache duration settings (in seconds, or "session" for session-wide)
cache.durations.command_exists = "session"
cache.durations.system_info = 86400
cache.durations.claude_version = 21600
cache.durations.git_config = 3600
cache.durations.git_submodules = 300
cache.durations.git_branches = 30
cache.durations.git_status = 10
cache.durations.git_current_branch = 10
cache.durations.mcp_server_list = 120
cache.durations.prayer_data = 3600
cache.durations.hijri_date = 3600
cache.durations.location_data = 604800
cache.durations.directory_info = 5
cache.durations.file_operations = 2

# Performance and reliability settings
cache.performance.max_lock_retries = 10
cache.performance.lock_retry_delay_ms = "100-500"
cache.performance.atomic_write_timeout = 10
cache.performance.cache_cleanup_interval = 300
cache.performance.max_cache_age_hours = 168

# Security and integrity settings
cache.security.directory_permissions = "700"
cache.security.file_permissions = "600"
cache.security.enable_checksums = true
cache.security.validate_on_read = true
cache.security.secure_temp_files = true
cache.security.instance_isolation = true

# Instance isolation settings - prevent cache contamination between repositories
# Options: "repository" (isolate by working directory), "instance" (by process), "shared" (no isolation)
cache.isolation.mode = "repository"          # Default isolation mode for all cache types
cache.isolation.mcp = "repository"           # MCP server status (prevents showing wrong servers)
cache.isolation.git = "repository"           # Git operations (already repository-aware by design)
cache.isolation.cost = "shared"              # Cost tracking (user-wide, should be shared)
cache.isolation.session = "repository"       # Session costs (isolate per project)
cache.isolation.prayer = "shared"            # Prayer times (user-wide, location-based)
cache.isolation.hijri = "shared"             # Hijri dates (user-wide, location-based)

# Legacy compatibility settings
cache.legacy.version_duration = 3600
cache.legacy.version_file = "/tmp/.claude_version_cache"

# === DISPLAY FORMATS ===
# Date and time formatting options
display.time_format = "%H:%M"
display.date_format = "%Y-%m-%d"
display.date_format_compact = "%Y%m%d"

# === ERROR/FALLBACK MESSAGES ===
# Messages displayed when services are unavailable
messages.no_ccusage = "No ccusage"
messages.ccusage_install = "Install ccusage for cost tracking"
messages.no_active_block = "No active block"
messages.mcp_unknown = "unknown"
messages.mcp_none = "none"
messages.unknown_version = "?"
messages.no_submodules = "--"

# === ADVANCED SETTINGS ===
# Fine-grained control over behavior and performance
advanced.warn_missing_deps = false
advanced.debug_mode = false
advanced.performance_mode = false
advanced.strict_validation = true

# === BASH COMPATIBILITY ===
# Universal bash compatibility settings (automatically managed)
compatibility.auto_detect_bash = true
compatibility.enable_compatibility_mode = true
compatibility.compatibility_warnings = true
compatibility.bash_path = ""

# === PLATFORM SETTINGS ===  
# Platform-specific configurations
platform.prefer_gtimeout = true
platform.use_gdate = false
platform.color_support_level = "full"

# === PATH CONFIGURATIONS ===
# Customizable paths for various functions
paths.temp_dir = "/tmp"
paths.config_dir = "~/.config/claude-code-statusline"
paths.cache_dir = "~/.cache/claude-code-statusline"
paths.log_file = "~/.cache/claude-code-statusline/statusline.log"

# === PERFORMANCE TUNING ===
# Optimization settings
performance.parallel_data_collection = true
performance.max_concurrent_operations = 3
performance.git_operation_timeout = "10s"
performance.network_operation_timeout = "10s"
performance.enable_smart_caching = true
performance.cache_compression = false

# === DEBUGGING & LOGGING ===
# Development and troubleshooting options
debug.log_level = "error"
debug.log_config_loading = false
debug.log_theme_application = false
debug.log_validation_details = false
debug.benchmark_performance = false
debug.export_debug_info = false

# === THEME INHERITANCE SYSTEM ===
# Advanced theme customization with inheritance
theme.inheritance.enabled = true
theme.inheritance.base_theme = ""
theme.inheritance.override_colors = []
theme.inheritance.merge_strategy = "override"

# === CONDITIONAL CONFIGURATION ===
# Context-aware configuration
conditional.enabled = false

# Work hours configuration (24-hour format)
conditional.work_hours.enabled = false
conditional.work_hours.start_time = "09:00"
conditional.work_hours.end_time = "17:00"
conditional.work_hours.timezone = "local"
conditional.work_hours.work_profile = "work"
conditional.work_hours.off_hours_profile = "personal"

# Git repository context
conditional.git_context.enabled = false
conditional.git_context.work_repos = []
conditional.git_context.personal_repos = []

# === CONFIGURATION PROFILES ===
# Different configurations for different contexts
profiles.enabled = false
profiles.default_profile = "default"
profiles.auto_switch = true

# Profile definitions (examples)
profiles.work.theme = "classic"
profiles.work.show_cost_tracking = true
profiles.work.show_reset_info = true
profiles.work.mcp_timeout = "10s"

profiles.personal.theme = "catppuccin"
profiles.personal.show_cost_tracking = false
profiles.personal.show_reset_info = false
profiles.personal.mcp_timeout = "10s"

profiles.demo.theme = "garden"
profiles.demo.show_cost_tracking = false
profiles.demo.show_commits = false

# === PLUGIN SYSTEM ===
# Extensible data source system (Phase 3 foundation)
plugins.enabled = false
plugins.auto_discovery = true
plugins.plugin_dirs = ["~/.config/claude-code-statusline/plugins", "./plugins"]
plugins.timeout_per_plugin = "10s"

# Built-in plugin configurations
plugins.git_extended.enabled = false
plugins.git_extended.show_stash_count = false
plugins.git_extended.show_ahead_behind = false
plugins.git_extended.show_branch_age = false

plugins.system_info.enabled = false
plugins.system_info.show_load_average = false
plugins.system_info.show_memory_usage = false
plugins.system_info.show_disk_usage = false

plugins.weather.enabled = false
plugins.weather.api_key = ""
plugins.weather.location = "auto"
plugins.weather.units = "metric"

# ============================================================================
# TEMPLATE MAINTENANCE NOTES
# ============================================================================
#
# 🔧 IMPORTANT: When adding new configuration options to the codebase:
#    1. Add the new option to this template with sensible default values
#    2. Include comprehensive documentation comments for new sections
#    3. Update any related documentation referencing configuration options
#    4. Test the template for TOML syntax validity before committing
#
# 📚 This file serves multiple purposes:
#    • Installation template (copied to ~/.claude/statusline/Config.toml)
#    • Configuration documentation (comprehensive reference)
#    • Testing baseline (validated for TOML syntax)
#    • Developer reference (complete list of all available options)
#
# 🎯 Usage by installer:
#    • Downloaded from: https://raw.githubusercontent.com/rz1989s/claude-code-statusline/{branch}/examples/Config.toml
#    • Copied to: ~/.claude/statusline/Config.toml (with backup if exists)
#    • No shell processing required - direct TOML-to-TOML copy
#
# ============================================================================